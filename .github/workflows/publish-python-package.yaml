# SPDX-FileCopyrightText: Chris Wilson <christopher.david.wilson@gmail.com>
#
# SPDX-License-Identifier: Apache-2.0 OR MIT

---
name: Publish Python package

on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
    tags:
      - v*

permissions:
  attestations: write
  contents: read
  id-token: write

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  build:
    name: Build & verify package dists
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # https://github.com/actions/checkout/issues/249
      - uses: hynek/build-and-inspect-python-package@v2
        with:
          attest-build-provenance-github: "true"

  publish-to-pypi:
    name: Publish to PyPI
    # only publish to PyPI on tag pushes
    if: >-
      github.repository_owner == 'tinydantic'
      && startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/tinydantic
    steps:
      - name: Download package dists
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - name: Publish dists to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  # Sign the Python package distributions with Sigstore and upload them to a
  # GitHub Release
  github-release:
    name: Create GitHub Release
    if: github.repository_owner == 'tinydantic'
    needs:
      - publish-to-pypi
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download package dists
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish to TestPyPI
    # only publish to TestPyPI on pushes to the main branch or tag pushes
    if: >-
      github.repository_owner == 'tinydantic' &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/tinydantic
    steps:
      - name: Download package dists
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - name: Publish dists to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
