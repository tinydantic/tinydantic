# SPDX-FileCopyrightText: Chris Wilson <christopher.david.wilson@gmail.com>
#
# SPDX-License-Identifier: Apache-2.0 OR MIT

#:schema https://json.schemastore.org/pyproject.json

[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs",
  "hatchling",
]

[project]
authors = [
  { name = "Chris Wilson", email = "christopher.david.wilson@gmail.com" },
]
# https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Framework :: Pydantic :: 2",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Programming Language :: Python",
  "Topic :: Database",
  "Topic :: Software Development :: Libraries",
  "Typing :: Typed",
]
dependencies = [
  "PyYAML",
  "eval_type_backport;python_version<='3.9'",
  "pydantic[email]>=2.0",
  "tinydb>=4.0",
]
description = ""
dynamic = [
  "version",
]
keywords = [
]
license = { text = "Apache-2.0 OR MIT" }
# TODO @cdwilson: uncomment this when license-files is supported in the JSON
# schema https://json.schemastore.org/pyproject.json
# license-files = { globs = [
#   "LICENSES/*",
# ] }
name = "tinydantic"
readme = "README.md"
requires-python = ">=3.8"

[project.optional-dependencies]
compliance = [
  "reuse>=4.0.0",
]
dev = [
  "check-jsonschema",
  "commitizen",
  "editorconfig-checker",
  "interrogate",
  "jsonschema[format]",
  "pre-commit-ci-config",
  "pyclean",
  "ruff>=0.6",
  "semver",
  "tinydantic[compliance,doc,pre-commit,test,types]",
  "uv",
]
# "doc" is the reserved feature name to mark dependencies needed for generating
# documentation:
# https://packaging.python.org/en/latest/specifications/core-metadata/#provides-extra-multiple-use
#
# TODO @cdwilson: should this be changed to "docs"? "docs" appears to be more
# popular than "doc":
# https://github.com/scientific-python/specs/pull/324#issuecomment-2150738534
doc = [
  # black is used by separate_signature option in mkdocstrings-python to format
  # function signatures
  "black",
  "griffe>=1.1.1",
  "linkchecker",
  "mike",
  "mkdocs-awesome-pages-plugin",
  "mkdocs-gen-files",
  "mkdocs-github-admonitions-plugin",
  "mkdocs-include-markdown-plugin",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocstrings-python",
]
pre-commit = [
  "pre-commit",
]
# "test" is the reserved feature name to mark dependencies needed for running
# automated tests:
# https://packaging.python.org/en/latest/specifications/core-metadata/#provides-extra-multiple-use
test = [
  "packaging",
  "pytest",
]
types = [
  "mypy>=1.0.0",
  "packaging",         # TODO @cdwilson: this is duplicated in test
  "types-PyYAML",
  "typing-extensions",
]

[project.urls]
Changelog = "https://github.com/tinydantic/tinydantic/blob/main/CHANGELOG.md"
Documentation = "https://tinydantic.dev"
Issues = "https://github.com/tinydantic/tinydantic/issues"
Source = "https://github.com/tinydantic/tinydantic"

[tool.hatch.version]
raw-options = { local_scheme = "no-local-version" }
source = "vcs"

[tool.hatch.envs.compliance]
features = [
  "compliance",
]

[tool.hatch.envs.compliance.scripts]
check = "reuse lint"
sbom = "reuse spdx -o reuse.spdx"

[tool.hatch.envs.default]
features = [
  "dev",
]

[tool.hatch.envs.default.scripts]
clean = "pyclean . --debris --verbose"
release = 'pysemver check {args} && git tag -a v{args} -m "Release version {args}" && git push --tags'
spell-check = "npx cspell --gitignore --dot ."
update-project-words = 'npx cspell --gitignore --dot --words-only --unique . | sort --ignore-case >> project-words.txt'

[tool.hatch.envs.doc]
features = [
  "doc",
]
python = "3.12"

[tool.hatch.envs.doc.env-vars]
MKDOCS_CONFIG = "mkdocs.yaml"
PYTHONUNBUFFERED = "1"
SOURCE_DATE_EPOCH = "1580601600"

[tool.hatch.envs.doc.scripts]
build = "mkdocs build --config-file {env:MKDOCS_CONFIG} --clean --strict {args}"
build-check = [
  "build --no-directory-urls",
  "check",
]
check = "linkchecker --config .linkcheckerrc site"
ci-publish = "mike deploy --config-file {env:MKDOCS_CONFIG} --update-aliases --push {args}"
serve = "mkdocs serve --config-file {env:MKDOCS_CONFIG} --dev-addr localhost:8000 {args}"

# TODO @cdwilson: remove this when https://github.com/pypa/hatch/issues/1553
# is implemented
[tool.hatch.envs.hatch-test]
default-args = [
  # hatch test ignores [tool.pytest.ini_options] table
  # https://github.com/pypa/hatch/issues/1551
  # https://github.com/pypa/hatch/issues/1452#issuecomment-2153447373
  "--config-file=pyproject.toml",
]
features = [
  "test",
]

[tool.hatch.envs.types]
features = [
  "types",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/tinydantic tests}"

[tool.hatch.envs.pre-commit]
features = [
  "pre-commit",
]

[tool.hatch.envs.pre-commit.scripts]
run = "pre-commit run --all-files --verbose"

[tool.coverage.run]
branch = true
parallel = true
source_pkgs = [
  "tests",
  "tinydantic",
]

[tool.coverage.paths]
tests = [
  "*/tinydantic/tests",
  "tests",
]
tinydantic = [
  "*/tinydantic/src/tinydantic",
  "src/tinydantic",
]

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "no cov",
]

[tool.commitizen]
major_version_zero = true
name = "cz_conventional_commits"
tag_format = "v$version"
version_provider = "scm"
version_scheme = "semver2"

[tool.interrogate]
# exclude = [
#   ".hatch",
# ]
fail-under = 100
ignore-private = true
ignore-regex = [
  # tinydantic.document
  "DocumentMeta",
]
ignore-semiprivate = true
omit-covered-files = true
style = "google"
verbose = 2

[tool.pytest.ini_options]
addopts = "--doctest-modules --doctest-glob '*.md'"
doctest_optionflags = "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL"
minversion = "6.0"
testpaths = [
  "README.md",
  "doc",
  "src",
  "tests",
]
